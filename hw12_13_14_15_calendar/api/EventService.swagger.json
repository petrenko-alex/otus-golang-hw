{
  "swagger": "2.0",
  "info": {
    "title": "api/EventService.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EventService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/event.EventService/CreateEvent": {
      "post": {
        "operationId": "EventService_CreateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventCreateRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/DeleteEvent": {
      "post": {
        "operationId": "EventService_DeleteEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventDeleteRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/GetDayEvents": {
      "post": {
        "operationId": "EventService_GetDayEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventEvents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventStartDate"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/GetMonthEvents": {
      "post": {
        "operationId": "EventService_GetMonthEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventEvents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventStartDate"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/GetWeekEvents": {
      "post": {
        "operationId": "EventService_GetWeekEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventEvents"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventStartDate"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/event.EventService/UpdateEvent": {
      "post": {
        "operationId": "EventService_UpdateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventUpdateRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    }
  },
  "definitions": {
    "eventCreateRequest": {
      "type": "object",
      "properties": {
        "eventData": {
          "$ref": "#/definitions/eventEventData"
        }
      }
    },
    "eventCreateResponse": {
      "type": "object",
      "properties": {
        "eventId": {
          "$ref": "#/definitions/eventEventId"
        }
      }
    },
    "eventDeleteRequest": {
      "type": "object",
      "properties": {
        "eventId": {
          "$ref": "#/definitions/eventEventId"
        }
      }
    },
    "eventDeleteResponse": {
      "type": "object"
    },
    "eventEvent": {
      "type": "object",
      "properties": {
        "eventId": {
          "$ref": "#/definitions/eventEventId"
        },
        "eventData": {
          "$ref": "#/definitions/eventEventData"
        }
      }
    },
    "eventEventData": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "remindTime": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "eventEventId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "eventEvents": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/eventEvent"
          }
        }
      }
    },
    "eventStartDate": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "eventUpdateRequest": {
      "type": "object",
      "properties": {
        "eventId": {
          "$ref": "#/definitions/eventEventId"
        },
        "eventData": {
          "$ref": "#/definitions/eventEventData"
        }
      }
    },
    "eventUpdateResponse": {
      "type": "object"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
